#!/bin/bash

# use PAUSE=1 to pause on each command

set -e -o pipefail
[[ "$1" == "clean" ]] && CLEAN="true"
[[ "$DRYRUN" != "" ]] && EVAL=":" || EVAL="eval"

set -x

while read -u 3 line ; do
  line="$prev$line"
  if [[ "$line" == *"\\" ]]; then
    prev="${line: -2}"
    continue
  fi
  prev=""

  # Skip all non-user-commands and comment-commands
  [[ "$line" != "\$"* && "$line" != "<!-- "* ]] && continue

  # Override the "ibmcom" if a REGISTRY was specified
  [[ -v REGISTRY ]] && line=${line/ibmcom/$REGISTRY}

  if [[ "$line" == "<!-- "* ]]; then
    # Comment command
    line=${line:5}
    line=${line%% -->}

    # Marks the start of our "clean" commands, so turn off "stop on error"
    [[ "$line" == "clean" ]] && FOUND_CLEAN="true" && set +e && continue

    if [[ "$CLEAN" == "" || "$FOUND_CLEAN" != "" ]]; then
      env | sort > origenv
      # echo '#' $line
      # $EVAL $line || { echo "Failed: $line" ; exit 1 ; }
      $EVAL $line || [[ -n "$FOUND_CLEAN" ]] || { echo "Fail: $line";exit 1 ; }
      (set +e ; env | sort | diff origenv - | grep -v '^[0-9]\+a'>dif ; exit 0)
      cat dif ; [[ -s dif ]] && echo ; rm -f dif
    fi
  else
    # User command
    if [[ "$CLEAN" == "" || "$FOUND_CLEAN" != "" ]]; then
      line=${line:2}
      echo -n '$' $line" "
      test -n "$PAUSE" && { read -sn 1 a; [[ "$a" == "r" ]] && PAUSE=""; }; echo
      start=$(date +%s)
      $EVAL $line 2>&1 | ( ( [[ "$line" == "export"* ]] && cat ) || tee out )
      end=$(date +%s)
      [[ -n $SHOWTIME ]] && echo "# Time: $((end-start))s"
      echo
      [[ "$line" == "exit"* ]] && exit 0
    fi
  fi
done  3< README.md
rm -f out origenv
